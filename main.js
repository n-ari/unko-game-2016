// Generated by CoffeeScript 1.10.0
var HEIGHT, Player, Unko, WIDTH, _ctx, cnt, collide, diff, gameoverloop, main, mainloop, onClick, player, prob, rnd, timecnt, unko, unkolist;

WIDTH = 480;

HEIGHT = 480;

Player = (function() {
  Player.w = 48;

  Player.h = 48;

  Player.v_norm = 4;

  function Player() {
    this.x = WIDTH / 2 - Player.w / 2;
    this.y = HEIGHT - Player.h;
    this.vx = Player.v_norm;
  }

  Player.prototype.move = function() {
    this.x += this.vx;
    if (this.x + Player.w >= WIDTH) {
      return this.vx = -Player.v_norm;
    } else if (this.x <= 0) {
      return this.vx = Player.v_norm;
    }
  };

  Player.prototype.draw = function(ctx) {
    return ctx.drawImage(unko, this.x, this.y);
  };

  return Player;

})();

Unko = (function() {
  Unko.w = 48;

  Unko.h = 48;

  Unko.v_norm = 8;

  function Unko() {
    this.x = Math.random() * (WIDTH - Unko.w);
    this.y = -Unko.h;
    this.vy = Unko.v_norm;
  }

  Unko.prototype.move = function() {
    this.y += this.vy;
    if (this.y >= HEIGHT) {
      return false;
    } else {
      return true;
    }
  };

  Unko.prototype.draw = function(ctx) {
    return ctx.drawImage(unko, this.x, this.y);
  };

  return Unko;

})();

collide = function(a, b) {
  var dx, dy;
  dx = a.x - b.x;
  dx *= dx;
  dy = a.y - b.y;
  dy *= dy;
  return (dx + dy) <= 30 * 30;
};

unko = null;

player = null;

unkolist = [];

_ctx = null;

main = function() {
  var canTouch, cvs, touchevent;
  cvs = document.getElementById("cvs");
  if (!cvs || !cvs.getContext) {
    return;
  }
  _ctx = cvs.getContext("2d");
  touchevent = "";
  canTouch = ("ontouchstart" in window);
  if (canTouch) {
    touchevent = "touchstart";
  } else {
    touchevent = "mousedown";
  }
  cvs.addEventListener(touchevent, onClick, false);
  player = new Player();
  unko = new Image();
  unko.onload = function() {
    return mainloop();
  };
  return unko.src = "./unko.png?" + (new Date().getTime());
};

timecnt = 0;

cnt = 0;

prob = 0.0;

diff = 0.996;

mainloop = function() {
  var deletelist, flag, goflag, i, id, j, k, l, ref, ref1, ref2;
  _ctx.fillStyle = "#ccf";
  _ctx.fillRect(0, 0, WIDTH, HEIGHT);
  ++timecnt;
  prob *= diff;
  if (prob <= Math.random()) {
    prob = 1.0;
    unkolist.push(new Unko());
  }
  ++cnt;
  if (cnt >= 1200) {
    diff *= 0.995;
    console.log(diff);
    cnt = 0;
  }
  goflag = false;
  player.move();
  deletelist = [];
  for (i = j = 0, ref = unkolist.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    flag = unkolist[i].move();
    if (!flag) {
      deletelist.push(i);
    } else {
      goflag |= collide(player, unkolist[i]);
    }
  }
  for (i = k = 0, ref1 = deletelist.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {
    id = deletelist[deletelist.length - 1 - i];
    unkolist.splice(id, 1);
  }
  player.draw(_ctx);
  for (i = l = 0, ref2 = unkolist.length; 0 <= ref2 ? l < ref2 : l > ref2; i = 0 <= ref2 ? ++l : --l) {
    unkolist[i].draw(_ctx);
  }
  if (goflag) {
    cnt = 114514;
    gameoverloop();
    return;
  }
  return setTimeout(mainloop, 16);
};

rnd = function() {
  return Math.floor(Math.random() * 256);
};

gameoverloop = function() {
  var lasttime;
  ++cnt;
  if (cnt >= 30) {
    cnt = 0;
    lasttime = Math.floor(timecnt / 60.0 * 10000.0) / 10000.0;
    _ctx.drawImage(unko, Math.random() * (WIDTH - Unko.w), Math.random() * (HEIGHT - Unko.h));
    _ctx.fillStyle = "rgba(" + (rnd()) + "," + (rnd()) + "," + (rnd()) + ",0.3)";
    _ctx.fillRect(0, 200 - 44, WIDTH, 96);
    _ctx.fillStyle = "rgb(" + (rnd()) + "," + (rnd()) + "," + (rnd()) + ")";
    _ctx.font = "48px serif";
    _ctx.fillText(lasttime + "秒ぐらい", 0, 200);
    _ctx.fillText("💩を回避したよ💩💩💩💩💩💩💩💩💩💩💩💩", 0, 248);
  }
  return setTimeout(gameoverloop, 16);
};

onClick = function(e) {
  return player.vx *= -1;
};

window.onload = main;
